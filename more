#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <stdint.h>

#include <ctype.h>

void print_chars(uint32_t num)
{
    for (uint8_t i = 0; i < 5; i++) {
        putchar(num % 85 + 33);
        num /= 85;
    }
}

int encode(void)
{
    int8_t c = getchar();
    uint32_t num = 0;

    uint8_t i = 0;
    while (c != EOF) {
        if (c < 0) {
            return 1;
        }

        num <<= 8;
        num |= c;
        c = getchar();
        i++;

        if (i % 4 == 0) {
            print_chars(num);
            num = 0;
            i = 0;
        }
    }

    if (i != 0) {
        num <<= (8 - i % 4) * 8;
        print_chars(num);
    }
    putchar('\n');

    return 0;
}

int decode(void)
{    
    int8_t c = getchar();
    int8_t nums[5];

    uint8_t i = 0;
    while (c != EOF) {
        if (isspace(c)) {
            c = getchar();
            continue;
        }

        if (c < 33)
            return 1;

        nums[i % 5] = c - 33;
        i++;

        if (i % 5 == 0) {
            i = 0;
            uint32_t num = 0;
            for (int8_t j = 4; j >= 0; j--) {
                num = num * 85 + nums[j];
            }
            for (int8_t j = 3; j >= 0; j--) {
                int8_t chr = num >> 8 * j;
                if (chr < 0)
                    return 1;
                    
                putchar(chr);
            }
        }

        c = getchar();
    }


    if (i % 5 != 0)
        return 1;
    return 0;
}

// ================================
// DO NOT MODIFY THE FOLLOWING CODE
// ================================
int main(int argc, char *argv[])
{
    int retcode = 1;

    if (argc == 1 || (argc == 2 && strcmp(argv[1], "-e") == 0)) {
        retcode = encode();
    } else if (argc == 2 && strcmp(argv[1], "-d") == 0) {
        retcode = decode();
    } else {
        fprintf(stderr, "usage: %s [-e|-d]\n", argv[0]);
        return EXIT_FAILURE;
    }

    if (retcode != 0) {
        fprintf(stderr, "an error occurred\n");
        return EXIT_FAILURE;
    }

    return EXIT_SUCCESS;
}
